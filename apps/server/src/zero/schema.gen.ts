/* eslint-disable */
/* tslint:disable */
// noinspection JSUnusedGlobalSymbols
// biome-ignore-all
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero. ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/0xcadams/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { ZeroCustomType } from "drizzle-zero";
import type { default as zeroSchema } from "./zero.config";

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
    "tables": {
        "postTags": {
            "name": "postTags",
            "columns": {
                "postId": {
                    "type": "number",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "postTags", "postId">,
                    "serverName": "post_id"
                },
                "tagId": {
                    "type": "number",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "postTags", "tagId">,
                    "serverName": "tag_id"
                }
            },
            "primaryKey": ["postId", "tagId"],
            "serverName": "post_tags"
        },
        "posts": {
            "name": "posts",
            "columns": {
                "id": {
                    "type": "number",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "posts", "id">
                },
                "title": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "posts", "title">
                },
                "content": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "posts", "content">
                },
                "authorId": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "posts", "authorId">,
                    "serverName": "author_id"
                },
                "published": {
                    "type": "boolean",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "posts", "published">
                },
                "createdAt": {
                    "type": "number",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "posts", "createdAt">,
                    "serverName": "created_at"
                },
                "updatedAt": {
                    "type": "number",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "posts", "updatedAt">,
                    "serverName": "updated_at"
                }
            },
            "primaryKey": ["id"]
        },
        "tags": {
            "name": "tags",
            "columns": {
                "id": {
                    "type": "number",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "tags", "id">
                },
                "name": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "tags", "name">
                },
                "createdAt": {
                    "type": "number",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "tags", "createdAt">,
                    "serverName": "created_at"
                }
            },
            "primaryKey": ["id"]
        }
    },
    "relationships": {
        "postTags": {
            "post": [{ "sourceField": ["postId"], "destField": ["id"], "destSchema": "posts", "cardinality": "one" }],
            "tag": [{ "sourceField": ["tagId"], "destField": ["id"], "destSchema": "tags", "cardinality": "one" }]
        },
        "posts": {
            "postTags": [{ "sourceField": ["id"], "destField": ["postId"], "destSchema": "postTags", "cardinality": "many" }]
        },
        "tags": {
            "postTags": [{ "sourceField": ["id"], "destField": ["tagId"], "destSchema": "postTags", "cardinality": "many" }]
        }
    }
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
